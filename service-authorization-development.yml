server:
  port: 8099
  servlet:
    session:
      timeout: 3600 # 3600 Phut



grpc:
  client:
    service-authorization:
      address: static://localhost:18084
      negotiationType: plaintext

eureka:
  client:
    serviceUrl:
      defaultZone: http://service-registry:8085/eureka/


logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO

spring:
  application.name: service-authorization
  config:
    import: "optional:configserver:http://localhost:8088"
  profiles:
    active: development
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://local-server.com:5432/postgres
    #    username: postgres
    #    password: postgres
    username: auth_usr
    password: pwd
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    hibernate:
      ddl-auto: update
  jackson:
    deserialization:
      FAIL_ON_IGNORED_PROPERTIES: false
    serialization:
      INDENT_OUTPUT: false
      WRITE_DATES_AS_TIMESTAMPS: false
      WRITE_BIGDECIMAL_AS_PLAIN: true
  sql:
    init:
      mode: always
      platform: postgres

  globalcors:
    corsConfigurations:
      '[/**]':
        allowedOrigins: "*"
        allowedHeaders: "*"
        allowedMethods:
          - GET
          - POST
  data:
    redis:
      port: 6379
      host: local-server.com
      password: 2307
